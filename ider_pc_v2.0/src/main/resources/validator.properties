validator.constraints.regular.integer=^([-]|[+]?)[0-9]+$
validator.constraints.regular.floatType=^[-\+]?[0-9]+(\.[0-9]{1,})?$
validator.constraints.regular.unsignedInteger=^[0-9]+$
validator.constraints.regular.integerList=^[0-9]+(,[0-9]+)*$
validator.constraints.regular.unsignedIntegerThanZero=^[1-9][0-9]*$
validator.constraints.regular.decimal=^\d{1,15}(\.\d{1,2})?$
validator.constraints.regular.email=^\w+([-\+\.]\w+)*@\w+([-\.]\w+)*\.\w+([-\.]\w+)*$
validator.constraints.regular.ip=^(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9])\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[0-9])((,(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9])\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[0-9]))*)$
validator.constraints.regular.id=^[a-zA-Z0-9_]+$
validator.constraints.regular.ids=^(\w+){1}(,\w+)*$
validator.constraints.regular.boolType=^[01]$
validator.constraints.regular.cardNumber=^[0-9\*#\-_]{8,}$
validator.constraints.regular.acctNumber=^[0-9\*#\-_]{8,}$
validator.constraints.regular.chinese=^[\u4E00-\u9FA5]+$
validator.constraints.regular.english=^[A-Za-z]+$
validator.constraints.regular.name=^[a-zA-Z0-9\u4E00-\u9FA5]+$
validator.constraints.regular.chineseName=^[\u4E00-\u9FA5\w]+$
validator.constraints.regular.englishName=^[A-Za-z\u4E00-\u9FA5]+$
validator.constraints.regular.text=^[!~@#\$%\^\*\(\)\+\{\}\|:\?`\-=\[\]\\;',\.\/\s\w\u2001-\uffff\u00b7\u00d7]*$
validator.constraints.regular.telephone=^([0-9]{3,4}-)?([0-9]{7,8}){1}(-[0-9]{1,5})?$
validator.constraints.regular.mobile=^\d{11}$
validator.constraints.regular.phone=^([0-9]{3,4}-)?([0-9]{7,8}){1}(-[0-9]{1,5})?$|^\d{11}$
validator.constraints.regular.password=^([a-zA-Z-0-9\+\/]{4})+(([\w\+=\-_\.\/:!]{2,4})?)$
validator.constraints.regular.date=(^((([2468][048]00)|([3579][26]00)|([1][89][0][48])|([2-9][0-9][0][48])|([1][89][2468][048])|([2-9][0-9][2468][048])|([1][89][13579][26])|([2-9][0-9][13579][26]))[-](02)[-](29))$)|(^(((1[8-9]\\d{2})|([2-9]\\d{3}))[-](10|12|0[13578])[-](3[01]|[12][0-9]|0[1-9]))$)|(^(((1[8-9]\\d{2})|([2-9]\\d{3}))[-](11|0[469])[-](30|[12][0-9]|0[1-9]))$)|(^(((1[8-9]\\d{2})|([2-9]\\d{3}))[-](02)[-](2[0-8]|1[0-9]|0[1-9]))$)|(^((([2468][048]00)|([3579][26]00)|([1][89][0][48])|([2-9][0-9][0][48])|([1][89][2468][048])|([2-9][0-9][2468][048])|([1][89][13579][26])|([2-9][0-9][13579][26]))[\\/](02)[\\/](29))$)|(^(((1[8-9]\\d{2})|([2-9]\\d{3}))[\\/](10|12|0[13578])[\\/](3[01]|[12][0-9]|0[1-9]))$)|(^(((1[8-9]\\d{2})|([2-9]\\d{3}))[\\/](11|0[469])[\\/](30|[12][0-9]|0[1-9]))$)|(^(((1[8-9]\\d{2})|([2-9]\\d{3}))[\\/](02)[\\/](2[0-8]|1[0-9]|0[1-9]))$)
validator.constraints.regular.time=(^([01][0-9]|2[0-3]):([012345][0-9]):([012345][0-9])$)
validator.constraints.regular.dateTime=(^((([2468][048]00)|([3579][26]00)|([1][89][0][48])|([2-9][0-9][0][48])|([1][89][2468][048])|([2-9][0-9][2468][048])|([1][89][13579][26])|([2-9][0-9][13579][26]))[-](02)[-](29)) ([01][0-9]|2[0-3]):([012345][0-9]):([012345][0-9])$)|(^(((1[8-9]\\d{2})|([2-9]\\d{3}))[-](10|12|0[13578])[-](3[01]|[12][0-9]|0[1-9])) ([01][0-9]|2[0-3]):([012345][0-9]):([012345][0-9])$)|(^(((1[8-9]\\d{2})|([2-9]\\d{3}))[-](11|0[469])[-](30|[12][0-9]|0[1-9])) ([01][0-9]|2[0-3]):([012345][0-9]):([012345][0-9])$)|(^(((1[8-9]\\d{2})|([2-9]\\d{3}))[-](02)[-](2[0-8]|1[0-9]|0[1-9])) ([01][0-9]|2[0-3]):([012345][0-9]):([012345][0-9])$)|(^((([2468][048]00)|([3579][26]00)|([1][89][0][48])|([2-9][0-9][0][48])|([1][89][2468][048])|([2-9][0-9][2468][048])|([1][89][13579][26])|([2-9][0-9][13579][26]))[\\/](02)[\\/](29)) ([01][0-9]|2[0-3]):([012345][0-9]):([012345][0-9])$)|(^(((1[8-9]\\d{2})|([2-9]\\d{3}))[\\/](10|12|0[13578])[\\/](3[01]|[12][0-9]|0[1-9])) ([01][0-9]|2[0-3]):([012345][0-9]):([012345][0-9])$)|(^(((1[8-9]\\d{2})|([2-9]\\d{3}))[\\/](11|0[469])[\\/](30|[12][0-9]|0[1-9])) ([01][0-9]|2[0-3]):([012345][0-9]):([012345][0-9])$)|(^(((1[8-9]\\d{2})|([2-9]\\d{3}))[\\/](02)[\\/](2[0-8]|1[0-9]|0[1-9])) ([01][0-9]|2[0-3]):([012345][0-9]):([012345][0-9])$)
validator.constraints.regular.yearMonth=(^((1[8-9]\\d{2})|([2-9]\\d{3}))[-](1[0-2]|0[1-9])$)|(^((1[8-9]\\d{2})|([2-9]\\d{3}))[\\/](1[0-2]|0[1-9])$)
validator.constraints.regular.order=^(desc|asc|DESC|ASC)$
